<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trackray.rest.dao.VulnDTOMapper">
  <resultMap id="BaseResultMap" type="com.trackray.rest.dto.VulnDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="task_md5" jdbcType="VARCHAR" property="taskMd5" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="payload" jdbcType="VARCHAR" property="payload" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="vuln_id" jdbcType="VARCHAR" property="vulnId" />
    <result column="about_link" jdbcType="VARCHAR" property="aboutLink" />
    <result column="vuln_type" jdbcType="INTEGER" property="vulnType" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.trackray.rest.dto.VulnDTOWithBLOBs">
    <result column="response" jdbcType="LONGVARCHAR" property="response" />
    <result column="request" jdbcType="LONGVARCHAR" property="request" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, task_md5, level, payload, message, vuln_id, about_link, vuln_type, create_time
  </sql>
  <sql id="Blob_Column_List">
    response, request
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.trackray.rest.dto.VulnDTOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vulnerable_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.trackray.rest.dto.VulnDTOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vulnerable_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vulnerable_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vulnerable_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.trackray.rest.dto.VulnDTOExample">
    delete from vulnerable_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.trackray.rest.dto.VulnDTOWithBLOBs">
    insert into vulnerable_data (id, task_md5, level, 
      payload, message, vuln_id, 
      about_link, vuln_type, create_time, 
      response, request)
    values (#{id,jdbcType=INTEGER}, #{taskMd5,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{payload,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{vulnId,jdbcType=VARCHAR}, 
      #{aboutLink,jdbcType=VARCHAR}, #{vulnType,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, 
      #{response,jdbcType=LONGVARCHAR}, #{request,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.trackray.rest.dto.VulnDTOWithBLOBs">
    insert into vulnerable_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskMd5 != null">
        task_md5,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="payload != null">
        payload,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="vulnId != null">
        vuln_id,
      </if>
      <if test="aboutLink != null">
        about_link,
      </if>
      <if test="vulnType != null">
        vuln_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="request != null">
        request,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskMd5 != null">
        #{taskMd5,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="payload != null">
        #{payload,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="vulnId != null">
        #{vulnId,jdbcType=VARCHAR},
      </if>
      <if test="aboutLink != null">
        #{aboutLink,jdbcType=VARCHAR},
      </if>
      <if test="vulnType != null">
        #{vulnType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="response != null">
        #{response,jdbcType=LONGVARCHAR},
      </if>
      <if test="request != null">
        #{request,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.trackray.rest.dto.VulnDTOExample" resultType="java.lang.Long">
    select count(*) from vulnerable_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vulnerable_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskMd5 != null">
        task_md5 = #{record.taskMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.payload != null">
        payload = #{record.payload,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.vulnId != null">
        vuln_id = #{record.vulnId,jdbcType=VARCHAR},
      </if>
      <if test="record.aboutLink != null">
        about_link = #{record.aboutLink,jdbcType=VARCHAR},
      </if>
      <if test="record.vulnType != null">
        vuln_type = #{record.vulnType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.response != null">
        response = #{record.response,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.request != null">
        request = #{record.request,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update vulnerable_data
    set id = #{record.id,jdbcType=INTEGER},
      task_md5 = #{record.taskMd5,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      payload = #{record.payload,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      vuln_id = #{record.vulnId,jdbcType=VARCHAR},
      about_link = #{record.aboutLink,jdbcType=VARCHAR},
      vuln_type = #{record.vulnType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE},
      response = #{record.response,jdbcType=LONGVARCHAR},
      request = #{record.request,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vulnerable_data
    set id = #{record.id,jdbcType=INTEGER},
      task_md5 = #{record.taskMd5,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      payload = #{record.payload,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      vuln_id = #{record.vulnId,jdbcType=VARCHAR},
      about_link = #{record.aboutLink,jdbcType=VARCHAR},
      vuln_type = #{record.vulnType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.trackray.rest.dto.VulnDTOWithBLOBs">
    update vulnerable_data
    <set>
      <if test="taskMd5 != null">
        task_md5 = #{taskMd5,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="payload != null">
        payload = #{payload,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="vulnId != null">
        vuln_id = #{vulnId,jdbcType=VARCHAR},
      </if>
      <if test="aboutLink != null">
        about_link = #{aboutLink,jdbcType=VARCHAR},
      </if>
      <if test="vulnType != null">
        vuln_type = #{vulnType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=LONGVARCHAR},
      </if>
      <if test="request != null">
        request = #{request,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.trackray.rest.dto.VulnDTOWithBLOBs">
    update vulnerable_data
    set task_md5 = #{taskMd5,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      payload = #{payload,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      vuln_id = #{vulnId,jdbcType=VARCHAR},
      about_link = #{aboutLink,jdbcType=VARCHAR},
      vuln_type = #{vulnType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      response = #{response,jdbcType=LONGVARCHAR},
      request = #{request,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trackray.rest.dto.VulnDTO">
    update vulnerable_data
    set task_md5 = #{taskMd5,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      payload = #{payload,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      vuln_id = #{vulnId,jdbcType=VARCHAR},
      about_link = #{aboutLink,jdbcType=VARCHAR},
      vuln_type = #{vulnType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>